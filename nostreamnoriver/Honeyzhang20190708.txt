对于多重的“或”判断，在前面的判断条件通过时，不再对后面的参数进行判断。

例如：

if(is_right()|| !is_wrong()){

}

如果is_right()返回值是true，is_wrong（）这个函数是不会被运行的。


如果在应用过程中，前后两个函数有一定的关联，则要考虑他们的优先级来决定他们的
判断顺序，否则可能会出现意想不到的结果。

同理，对于多重的“与”判断，在前面的判断条件不能通过时，也不再对后面的参数进行判断
即：
if(is_right()&&!is_wrong()){

}
如果is_right（）返回值是false，is_wrong()这个函数也是不会被运行的

注意判断条件的优先级。